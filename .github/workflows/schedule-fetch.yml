name: OMC Fetch & Translate (Tasks → Editorial)

on:
  schedule:
    - cron: '58 11 * * *'  # 毎日 20:59 JST (= UTC11:59)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch_and_wait:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Browsers
        run: |
          python -m playwright install chromium

      - name: Wait until JST 21:00 (UTC 12:00)
        shell: bash
        run: |
          echo "=== 現在の UTC 時刻: $(date -u '+%Y-%m-%d %H:%M:%S') ==="
          # JST 21:00 は UTC 12:00
          TARGET_UTC=$(date -u -d '12:00:00' +%s)
          while true; do
            NOW_UTC=$(date -u +%s)
            if [ "$NOW_UTC" -ge "$TARGET_UTC" ]; then
              break
            fi
            sleep 1
          done
          echo "=== JST 21:00 (UTC 12:00) 到達 ==="

      - name: Run fetch_and_translate.py (Tasks) → Extract CONTEST_ID & DURATION
        id: fetch_tasks
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OMC_USERNAME:       ${{ secrets.OMC_USERNAME }}
          OMC_PASSWORD:       ${{ secrets.OMC_PASSWORD }}
        shell: bash
        run: |
          RESULT_JSON=$(python3 scripts/fetch_and_translate.py)
          echo "Fetch & Translate Tasks 結果: $RESULT_JSON"
          CONTEST_ID=$(echo "$RESULT_JSON" | grep -Po '(?<="contest_id":")[^"]+')
          DURATION_MIN=$(echo "$RESULT_JSON" | grep -Po '(?<="duration_min":)\d+')
          echo "::set-output name=contest_id::$CONTEST_ID"
          echo "::set-output name=duration_min::$DURATION_MIN"

          
      # ────────────────────────────────────────────────────────────
      # 【変更】 Step④：コンテスト開始 21:00 JST (UTC 12:00) を基準に duration_min 分後まで待機
      # ────────────────────────────────────────────────────────────
      - name: Wait until Contest Start (21:00 JST) + duration_min
        id: wait_editorial
        shell: bash
        run: |
          CONTEST_ID="${{ steps.fetch_tasks.outputs.contest_id }}"
          D_MIN="${{ steps.fetch_tasks.outputs.duration_min }}"
          if [ -z "$D_MIN" ] || [ "$D_MIN" -le 0 ]; then
            echo "::warning::duration_min が不正です。デフォルトで 60 分を設定します。"
            D_MIN=60
          fi

          # ─────────────────────────────────────────────────────────
          # (1) 当日 21:00 JST を UTC に直して Unix タイムスタンプを計算
          #     JST 21:00 は UTC 12:00 にあたる → “today 12:00:00” を使う
          # ─────────────────────────────────────────────────────────
          START_UTC=$(date -u -d '12:00:00' +%s)
          echo "→ 当日 21:00 JST は UTC $(date -u -d '12:00:00' '+%Y-%m-%d %H:%M:%S') (Unix: $START_UTC)"

          # ─────────────────────────────────────────────────────────
          # (2) “開始時刻” + (duration_min * 60 秒) を絶対 target として計算
          # ─────────────────────────────────────────────────────────
          D_SEC=$(( D_MIN * 60 ))
          TARGET=$(( START_UTC + D_SEC ))
          echo "→ Contest Start (JST 21:00) + ${D_MIN} 分 = Unix $TARGET (UTC: $(date -u -d "@$TARGET" '+%Y-%m-%d %H:%M:%S'))"

          # ─────────────────────────────────────────────────────────
          # (3) 今の UTC 時刻と target を比較 → 残り秒数だけ sleep
          # ─────────────────────────────────────────────────────────
          NOW=$(date -u +%s)
          SLEEP_SEC=$(( TARGET - NOW ))
          if [ "$SLEEP_SEC" -le 0 ]; then
            echo "→ すでに経過しているため、sleep をスキップ"
          else
            echo "→ あと ${SLEEP_SEC} 秒（約 $((SLEEP_SEC/60)) 分）待機します"
            sleep "$SLEEP_SEC"
          fi

          echo "===> 約 ${D_MIN} 分後 (解説公開タイミング) に到達しました"


      - name: Run fetch_editorial.py (Editorial)
        id: fetch_editorial
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OMC_USERNAME:       ${{ secrets.OMC_USERNAME }}
          OMC_PASSWORD:       ${{ secrets.OMC_PASSWORD }}
        shell: bash
        run: |
          CONTEST_ID="${{ steps.fetch_tasks.outputs.contest_id }}"
          echo ">>> Starting fetch_editorial.py for contest ${CONTEST_ID}"
          python3 scripts/fetch_editorial.py

      - name: Commit & Push all changes
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add languages/
            git commit -m "Auto: fetch & translate tasks and editorial for contest ${{ steps.fetch_tasks.outputs.contest_id }}"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi
